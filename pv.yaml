apiVersion: v1
kind: PersistentVolume
metadata:
  name: disk-writer-pv # Name of the PV object in Kubernetes
  namespace: bfg
spec:
  # Capacity must match or be greater than the PVC's request
  capacity:
    storage: 50Gi # IMPORTANT: Change this to the actual size of your 'my-existing-gce-disk'
  # Access modes - GCE PDs are typically ReadWriteOnce (RWO)
  # This means the volume can be mounted as read-write by a single node.
  # For GKE Autopilot, only 'ReadWriteOncePod' is supported for GCE PD.
  # For GKE Standard, 'ReadWriteOnce' is common. Adjust if needed.
  accessModes:
    - ReadWriteOnce # Or ReadWriteOncePod if using GKE Autopilot
  # Storage class name for static binding.
  # Use a specific name like "manual" or "" (empty string) to prevent
  # a default dynamic provisioner from accidentally trying to manage this.
  # If you use "", the PVC should also use "".
  storageClassName: manual
  # PersistentVolumeReclaimPolicy:
  # - Retain: When the PVC is deleted, the PV remains (and the underlying GCE disk is not deleted). You'd manually clean it up. This is safest for existing data.
  # - Delete: When the PVC is deleted, the PV is deleted, and the underlying GCE disk is also deleted. Use with caution for existing disks.
  # - Recycle: (Deprecated for most provisioners)
  persistentVolumeReclaimPolicy: Retain
  # GCE Persistent Disk specific configuration
  gcePersistentDisk:
    pdName: bfg-demo-disk # IMPORTANT: This MUST be the name of your *actual* GCE Persistent Disk
    fsType: ext4 # Filesystem type of your existing disk (e.g., ext4, xfs)

